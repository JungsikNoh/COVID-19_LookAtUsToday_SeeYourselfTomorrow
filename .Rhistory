for (n in 1:50){
x <- sample(x=c(0,1), size=5, replace=TRUE)
mymat[n,1] = mean(x)
}
seqPropHeads20 <- numeric()
for (n in 1:50){
x <- sample(x=c(0,1), size=20, replace=TRUE)
mymat[n,2] = mean(x)
}
seqPropHeads80 <- numeric()
for (n in 1:50){
x <- sample(x=c(0,1), size=80, replace=TRUE)
mymat[n,3] = mean(x)
}
mymat
boxplot(mymat)
summary(mymat)
sd(mymat)
apply(mymat, sd)
apply(mymat, 1, sd)
apply(mymat, 2, sd)
# tossing a fair coin
x <- sample(x=c(0,1), size=10, replace=TRUE)
x
# sample average of the discrete binary observations
propHeads <- mean(x)
propHeads
# tossing a fair coin
x <- sample(x=c(0,1), size=10, replace=TRUE)
x
# sample average of the discrete binary observations
propHeads <- mean(x)
propHeads
# coin tossing as the number of trials increases
seqPropHeads <- numeric()
for (n in 1:50){
x <- sample(x=c(0,1), size=n, replace=TRUE)
seqPropHeads[n] = mean(x)
}
# visualize the sample averages
plot(seqPropHeads, type='l', ylim=c(0,1))
abline(h=0.5, col='red')
for (n in 1:100){
x <- sample(x=c(0,1), size=n, replace=TRUE)
seqPropHeads[n] = mean(x)
}
# visualize the sample averages
plot(seqPropHeads, type='l', ylim=c(0,1))
abline(h=0.5, col='red')
# visualize the sample averages
plot(seqPropHeads, type='l', ylim=c(0,1))
abline(h=0.5, col='red')
xlab("Sample Size")
# visualize the sample averages
plot(seqPropHeads, type='l', ylim=c(0,1), xlab='SampleSize')
# visualize the sample averages
plot(seqPropHeads, type='l', ylim=c(0,1), xlab='SampleSize')
abline(h=0.5, col='red')
# coin tossing as the number of trials increases
seqPropHeads <- numeric()
for (n in 1:1000){
x <- sample(x=c(0,1), size=n, replace=TRUE)
seqPropHeads[n] = mean(x)
}
# visualize the sample averages
plot(seqPropHeads, type='l', ylim=c(0,1), xlab='SampleSize')
abline(h=0.5, col='red')
getwd()
data(cars)
cars
cars$speed[2] <- 100
head(cars)
data(cars)
haed(cars)
head(cars)
View(cars)
View(cars)
help(cars)
?cars
1 + 2
2*3
0/2
0/2
2/0
0/0
3^2
sqrt(2)
abs(-2)
round(2.6)
floor(2.6)
sin(1)
sin(pi/2)
pi
1 + 2
2*3
0/2
2/0
0/0
3^2
sqrt(2)
abs(-2)
round(2.6)
floor(2.6)
sin(1)
sin(pi/2)
pi
x <- 2
x
x = 2
x^2
sqrt(x)
a <- 1
a <- a+1
a
a = a + 1
a
summary
summary <- 2
summary
v <- 1:6
v
matrix(data=v, nrow=2, ncol=3)
help("matrix")
?matrix
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
mdat <- matrix(c(1,2,3, 11,12,13),  2,  3,  TRUE,
list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
mdat <- matrix(c(1,2,3, 11,12,13),  2,  3)
mdat
matrix(v, 2, 3)
matrix(0, 2, 3)
matrix(0, 3)
matrix(v, 3)
matrix(v, , 2)
matrix(v, , 3)
matrix(v, [], 3)
M <- matrix(v, 2, 3)
M
A <- matrix(1:9, 3)
A
A[2,3]
A[2,]
data(cars)
spd = cars$speed
hist(spd)
hist(spd, 'fd')
hist(spd, 'fd')
rnorm(100)
x <- rnorm(100)
hist(x)
hist(x, 'fd')
hist(x)
hist(x, 'fd')
hist(x, 'FD')
hist(x, 'Scoott')
hist(x, 'Scott')
hist(x, nclass=30)
summary(cars)
mean(cars)
sd(cars)
mean(cars)
cars
M
mean(M)
sd(M)
plot(cars)
v <- 1:6
v
matrix(data=v, nrow=2, ncol=3)
help("matrix")
?matrix
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
matrix(v, 2, 3)
matrix(v, 3, 2)
matrix(0, 2, 3)
matrix(v, 3)
matrix(v, , 2)
matrix(v, 3, byrow=TRUE)
M <- matrix(v, 2, 3)
M
M + 2
M * M
t(M)
M %*% t(M)
dim(M)
length(M)
head(M)
tail(M)
A <- matrix(1:9, 3)
A
v
v[3]
A[2, 3]
A[1:3, 3]
A[, 3]
A[2:3, 2:3]
ind <- c(2:3)
A[ind, 2]
M
A
myList <- list(mat1 = M, mat2 = t(M), mat3 = A)
myList
myList$mat3[2,3]
myList[[3]]
myList$mat3
myList2 <- c(myList, myList)
myList
myList2
mydata <- list(tvolume = 1:10, tweight = 2:11)
mydata
mydata <- data.frame(tvolume = 1:10, tweight = 2:11)
mydata
data(A)
data(cars)
cars
View(cars)
View(cars)
cars
head(cars)
tail(cars)
plot(cars$speed, cars$dist)
plot(cars)
summary(cars$speed)
summary(cars)
hist(cars$speed)
mean(cars$speed)
sd(cars$speed)
var(cars$speed)
quantile(cars$speed)
boxplot(cars)
boxplot(cars$speed)
boxplot(cars)
rnorm(n=30, mean=0, sd=1)
hist(rnorm(30))
hist(rnorm(30))
hist(rnorm(30))
hist(rnorm(30))
hist(rnorm(30))
hist(rnorm(30))
hist(rnorm(30))
hist(rnorm(30))
hist(rnorm(30))
hist(rnorm(30))
# an example of t-test
tumorSizeWT <- rnorm(n=30, mean=7, sd=1)
tumorSizeMT <- rnorm(n=40, mean=6, sd=1)
tumorSizeWT
tumorSizeMT
summary(tumorSizeMT)
summary(tumorSizeWT)
# data visualization using density()
plot(density(tumorSizeWT), xlim=c(2, 11), ylim=c(0, 0.6))
# data visualization using density()
# data visualization using density()
plot(density(tumorSizeWT), xlim=c(2, 11), ylim=c(0, 0.6))
# data visualization using density()
plot(density(tumorSizeWT), xlim=c(2, 11), ylim=c(0, 0.6))
plot(density(tumorSizeMT), col='red', xlim=c(2,11), ylim=c(0, 0.6))
# data visualization using density()
plot(density(tumorSizeWT), xlim=c(2, 11), ylim=c(0, 0.6))
lines(density(tumorSizeMT), col='red', xlim=c(2,11), ylim=c(0, 0.6))
# data visualization using boxplot
tumorSize <- c(tumorSizeWT, tumorSizeMT)
c(rep("WT", 30), rep("MT", 40))
tumorSize
cond
# data visualization using boxplot
tumorSize <- c(tumorSizeWT, tumorSizeMT)
cond <- c(rep("WT", 30), rep("MT", 40))
boxplot(tumorSize ~ cond)
# Student's t-test
t.test(x=tumorSizeWT, y=tumorSizeMT)
# Student's t-test
t.test(x=tumorSizeWT, y=tumorSizeMT)
# an example of t-test
tumorSizeWT <- rnorm(n=30, mean=7, sd=1)
tumorSizeMT <- rnorm(n=40, mean=6, sd=1)
# data visualization using density()
plot(density(tumorSizeWT), xlim=c(2, 11), ylim=c(0, 0.6))
lines(density(tumorSizeMT), col='red', xlim=c(2,11), ylim=c(0, 0.6))
# data visualization using boxplot
tumorSize <- c(tumorSizeWT, tumorSizeMT)
cond <- c(rep("WT", 30), rep("MT", 40))
boxplot(tumorSize ~ cond)
# Student's t-test
t.test(x=tumorSizeWT, y=tumorSizeMT)
#setwd('C:/forgithub/COVID19_LookAtUsTodaySeeYourselfTomorrow')
print(getwd())
# fetch JHU
urlJhu = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
jhudat = read.csv(urlJhu, head=T)
# china curation
idPrv = which(jhudat$Country.Region=='China')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='China', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
# canada curation
idPrv = which(jhudat$Country.Region=='Canada')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='Canada', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
# fetch JHU
urlJhu = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
jhudat = read.csv(urlJhu, head=T)
# china curation
idPrv = which(jhudat$Country.Region=='China')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='China', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
# canada curation
idPrv = which(jhudat$Country.Region=='Canada')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='Canada', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
# fetch JHU
urlJhu = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
jhudat = read.csv(urlJhu, head=T)
# china curation
idPrv = which(jhudat$Country.Region=='China')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='China', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
# canada curation
idPrv = which(jhudat$Country.Region=='Canada')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='Canada', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
# fetch JHU
urlJhu = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
jhudat = read.csv(urlJhu, head=T)
# china curation
idPrv = which(jhudat$Country.Region=='China')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='China', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
# canada curation
idPrv = which(jhudat$Country.Region=='Canada')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='Canada', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
#setwd('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow')
print(getwd())
load("C:/forgithub/COVID19_0428/summryMatLst_4vals_1st.rdata")
summryMatLst
tmp = array(unlist(summryMatLst), dim = c(51, 6, 4))
tmp
boxplot(tmp[, 1, ])
boxplot(tmp[, 2, ])
boxplot(tmp[, 2, 1:3])
ifrVec
boxplot(tmp[, 3, 1:3])
boxplot(tmp[, 4, 1:3])
boxplot(tmp[, 5, 1:3])
## fetch states data from covidtracking.com
url2 = 'https://covidtracking.com/api/v1/states/daily.csv'
covidtrackingDat = read.csv(url2, head=T)
# daily input dataset
write.csv(covidtrackingDat, file.path(getwd(), 'covidtracking_dot_com.csv'))
head(covidtrackingDat[, 1:7])
View(covidtrackingDat)
id = covidtrackingDat$date = '20200701'
tmp1= covidtrackingDat[id,]
tmp1
id
id = (covidtrackingDat$date == '20200701')
id
tmp1= covidtrackingDat[id,]
tmp1
tmp2 = tmp1$positiveIncrease
tmp2
colnames(tmp1)
tmp2 = tmp1[, c(1,2,25)]
tmp2
View(tmp2)
tmp2
size(tmp1)
dim(tmp1)
id = (covidtrackingDat$date == '20200701')
id
id = which(covidtrackingDat$date == '20200701')
id
View(covidtrackingDat)
aa =covidtrackingDat[1,]
aa
class(aa$date)
id=which(covidtrackingDat$date == '20200701')
length(id)
class(covidtrackingDat$date)
b = aa$date
b=='20200701'
aa = covidtrackingDat$date[100]
aa
aa = covidtrackingDat$date[200]
aa
## fetch states data from covidtracking.com
url2 = 'https://covidtracking.com/api/v1/states/daily.csv'
covidtrackingDat = read.csv(url2, head=T)
# daily input dataset
write.csv(covidtrackingDat, file.path(getwd(), 'covidtracking_dot_com.csv'))
head(covidtrackingDat[, 1:7])
View(covidtrackingDat)
covidtrackingDat$date[100]
id = which(covidtrackingDat$date == '20200701')
id
tmp = covidtrackingDat[id,]
tmp
View(tmp)
tmp2 = tmp[, -c(5:24)]
View(tmp2)
url2 = 'https://covidtracking.com/api/v1/states/daily.csv'
covidtrackingDat = read.csv(url2, head=T)
# daily input dataset
write.csv(covidtrackingDat, file.path(getwd(), 'covidtracking_dot_com.csv'))
head(covidtrackingDat[, 1:7])
View(covidtrackingDat)
## fetch states data from covidtracking.com
url2 = 'https://covidtracking.com/api/v1/states/daily.csv'
covidtrackingDat = read.csv(url2, head=T)
# daily input dataset
write.csv(covidtrackingDat, file.path(getwd(), 'covidtracking_dot_com.csv'))
head(covidtrackingDat[, 1:7])
## fetch states data from covidtracking.com
url2 = 'https://covidtracking.com/api/v1/states/daily.csv'
covidtrackingDat = read.csv(url2, head=T)
# daily input dataset
write.csv(covidtrackingDat, file.path(getwd(), 'covidtracking_dot_com.csv'))
head(covidtrackingDat[, 1:7])
## fetch states data from covidtracking.com
url2 = 'https://covidtracking.com/api/v1/states/daily.csv'
covidtrackingDat = read.csv(url2, head=T)
# daily input dataset
write.csv(covidtrackingDat, file.path(getwd(), 'covidtracking_dot_com.csv'))
head(covidtrackingDat[, 1:7])
View(covidtrackingDat)
tmp = covidtrackingDat[,(1:4, 14:18)]
dim(covidtrackingDat)
colnames(covidtrackingDat)
tmp = covidtrackingDat[,c(1:4, 27:28)]
View(tmp)
url2 = 'https://covidtracking.com/api/v1/states/daily.csv'
covidtrackingDat = read.csv(url2, head=T)
# daily input dataset
write.csv(covidtrackingDat, file.path(getwd(), 'covidtracking_dot_com.csv'))
head(covidtrackingDat[, 1:7])
colnames(covidtrackingDat)
tmp = covid[, c(1:2, 27:30)]
tmp = covidtrackingDat[, c(1:2, 27:30)]
View(tmp)
setwd('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow')
print(getwd())
urlJhu = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
jhudat = read.csv(urlJhu, head=T)
# china curation
idPrv = which(jhudat$Country.Region=='China')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='China', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
urlJhu = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
jhudat = read.csv(urlJhu, head=T)
# china curation
idPrv = which(jhudat$Country.Region=='China')
chinaPrv = jhudat[idPrv, ]
chinaPrvTS = chinaPrv[, 5:ncol(jhudat)]
chinaTS = colSums(chinaPrvTS)
chinaHead = data.frame(Province.State='', 'Country.Region'='China', Lat=NA, Long=NA)
chinaDP = cbind(chinaHead, rbind(chinaTS))
jhudat = rbind(chinaDP, jhudat[-idPrv, ])
head(jhudat)
