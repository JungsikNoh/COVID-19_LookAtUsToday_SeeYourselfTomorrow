plot.subtitle = element_text(hjust = 0, size=rel(0.7)),
axis.text = element_text(size = rel(1) ),
axis.title = element_text(size=rel(1)),
legend.position = 'top', legend.title = element_text(size= rel(1)),
legend.text = element_text(size = rel(1)))
print(cfig1)
cfig21 <- ggplot() +
#geom_line(data = datf3, aes(Day, maGRX), size=1, alpha=0.8, color='gray',
#          linetype = 'solid') +
geom_line(data=datf3ma, aes(Day, growth.X), size=1, alpha=0.8, color='black') +
geom_line(data=datf3ma, aes(Day, growth.Korea), size=1, alpha=0.3, color='blue') +
geom_line(data=datf3ma, aes(Day, growth.Italy), size=1, alpha=0.3, color='red') +
geom_point(data = ggp_datf3maL, aes(x=Day, y=val, color=Today), size=2, alpha=0.8) +
scale_color_manual(values = c('black', 'blue', 'red')) +
theme_bw()  +
geom_hline(yintercept = refLineVal) +
coord_cartesian(ylim = c(0, 70)) +
labs(title = 'Trend Curve of the Daily Growth Rates',
x= paste0('Days since total cases became > ', totalCases_threshold_toSetStart),
y='Percentage',
subtitle = paste0('As of ', curDate, XtotalforMsg)) +
theme(plot.title = element_text(hjust = 0.5, size=rel(1)),
plot.subtitle = element_text(hjust = 0, size=rel(0.7)),
axis.text = element_text(size = rel(1) ),
axis.title = element_text(size=rel(1)),
legend.position = 'top', legend.title = element_text(size = rel(1)),
legend.text = element_text(size = rel(1)))
print(cfig21)
myCaptn5 = paste0('If ', stname, ' follows the track of Korea, ', '\n',
'its new cases of ', difX, ' today would become ',
difprjKO, ' in ',
daysProjected[1], ' days.')
myCaptn6 = paste0('If ', stname, ' follows the track of Italy, ', '\n',
'its new cases of ', difX, ' today would become ',
difprjIT, ' in ',
daysProjected[2], ' days.')
cfig4 <- ggplot() +
geom_line(data=datf3_prj3_algn3, aes(daysFromToday, dif.X), size=1, alpha=0.8, color='black') +
geom_line(data=datf3_prj3_algn3, aes(daysFromToday, dif.Korea), size=1, alpha=0.3, color='blue') +
geom_line(data=datf3_prj3_algn3, aes(daysFromToday, dif.Italy), size=1, alpha=0.3, color='red') +
geom_point(data = ggp_datf3_prj3_algn3L, aes(x=daysFromToday, y=val, color=Today), size=2, alpha=1) +
scale_color_manual(values = c('black', 'blue', 'red')) +
theme_bw() +
theme_bw() +
geom_line(data = datf3_prj3_algn3, aes(daysFromToday, dif.grKO.prj.tot.X),
size=1, alpha=0.8, color='blue', linetype='F1') +
geom_line(data = datf3_prj3_algn3, aes(daysFromToday, dif.grIT.prj.tot.X),
size=1, alpha=0.8, color='red', linetype='F1') +
labs(title = 'Matched/Projected New Cases Per-day',
x= paste0('Days from today of ', stname), y='',
subtitle = paste0(myCaptn5, '\n', myCaptn6)) +
#caption = paste0(myCaptn3, '\n', myCaptn4)) +
theme(plot.title = element_text(hjust = 0.5, size=rel(1)),
plot.subtitle = element_text(hjust = 0, size=rel(0.7)),
axis.text = element_text(size = rel(1) ),
axis.title = element_text(size=rel(1)),
legend.position = 'top', legend.title = element_text(size = rel(1)),
legend.text = element_text(size = rel(1)),
plot.caption = element_text(hjust = 0, size = rel(1)))
print(cfig4)
cfig <- ggarrange(cfig1, cfig21, cfig4, ncol=3, nrow=1)
print(cfig)
f5name = paste0(stname, '_3plot_combined.png')
# 12 inches
png(file.path(outPath, f5name), width=12, height=3, units = "in")
Sys.sleep(2)
print(cfig)
Sys.sleep(2)
dev.off()
Sys.sleep(4)
print(cfig)
# 12 inches
png(file.path(outPath, f5name), width=12, height=3, units = "in", res=600)
Sys.sleep(2)
print(cfig)
Sys.sleep(2)
dev.off()
Sys.sleep(4)
# 12 inches
png(file.path(outPath, f5name), width=12, height=3, units = "in", res=300)
Sys.sleep(2)
print(cfig)
Sys.sleep(2)
dev.off()
Sys.sleep(4)
# 12 inches
png(file.path(outPath, f5name), width=12, height=3, units = "in", res=150)
Sys.sleep(2)
print(cfig)
Sys.sleep(2)
dev.off()
Sys.sleep(4)
source(file.path(getwd(), 'cvd_state_matchedProjected.R'))
source(file.path(getwd(), 'cvd_country_matchedProjected.R'))
source(file.path(getwd(), 'cvd_county_matchedProjected.R'))
stname = as.character(countryNamePop$Region[i])
i
i=1
stname = as.character(countryNamePop$Region[i])
tmp = cvd_country_matchedProjected(curDate, stname, jhudat, countryNamePop)
# run countries
numState = nrow(countryNamePop)
curDate
numState
numState = nrow(countryNamePop)
myCaptnLst_country = list()
for (i in 1:numState){
stname = as.character(countryNamePop$Region[i])
tmp = cvd_country_matchedProjected(curDate, stname, jhudat, countryNamePop)
myCaptnLst_country[[i]] = tmp
print(tmp)
}
i
dev.off()
dev.off()
dev.off()
dev.off()
source(file.path(getwd(), 'cvd_state_matchedProjected.R'))
source(file.path(getwd(), 'cvd_country_matchedProjected.R'))
source(file.path(getwd(), 'cvd_county_matchedProjected.R'))
numState = nrow(countryNamePop)
myCaptnLst_country = list()
for (i in 1:numState){
stname = as.character(countryNamePop$Region[i])
tmp = cvd_country_matchedProjected(curDate, stname, jhudat, countryNamePop)
myCaptnLst_country[[i]] = tmp
print(tmp)
}
i
# run states
numState = length(sortedStates)
StateAbb = sortedStates
sortedStates
head(covidtrackingDat)
print(sortedStates)
# run states
numState = length(sortedStates)
StateAbb = sortedStates
source(file.path(getwd(), 'cvd_state_matchedProjected.R'))
source(file.path(getwd(), 'cvd_country_matchedProjected.R'))
source(file.path(getwd(), 'cvd_county_matchedProjected.R'))
library(ggplot2)
#setwd('C:/forgithub/COVID19_LookAtUsTodaySeeYourselfTomorrow')
getwd()
curDate
head(jhudat)
basicDatasetsDir
stpopulationData
totalCases_threshold_toSetStart
totCases_thrshld_toSelectCnt
TXcountyDat = NYTcountyDat[ind, ]
TXcountyDat
totalCases_threshold_toSetStart = 50
totCases_thrshld_toSelectCnt = 200
## fetch TX county data from nytimes
url_nutimesCounty =
'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv'
NYTcountyDat = read.csv(url_nutimesCounty, head=T)
# counties in Texas
ind = (NYTcountyDat$state == 'Texas')
TXcountyDat = NYTcountyDat[ind, ]
# daily input dataset
write.csv(TXcountyDat, file.path(getwd(), 'TXcounty_nytimes.csv'))
tail(TXcountyDat)
# read TX county population
#numCnt = 10
popTXcounty= read.csv(file.path(basicDatasetsDir, 'worldpopulationReviewdotcom_2020_TexasCounty.csv'))
# county sorting
ind = (TXcountyDat$date == curDate)
txcntToday = TXcountyDat[ind, ]
# run states
numState = length(sortedStates)
StateAbb = sortedStates
myCaptnLst = list()
for (i in 1:numState){
tmp = cvd_state_matchedProjected(curDate, StateAbb[i], jhudat, covidtrackingDat,
populationData, stpopulationData)
myCaptnLst[[i]] = tmp
print(tmp)
}
t2=Sys.time(); t2 - t1
## EOF
########################
##  TX counties
########################
totalCases_threshold_toSetStart = 50
totCases_thrshld_toSelectCnt = 200
## fetch TX county data from nytimes
url_nutimesCounty =
'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv'
NYTcountyDat = read.csv(url_nutimesCounty, head=T)
# counties in Texas
ind = (NYTcountyDat$state == 'Texas')
TXcountyDat = NYTcountyDat[ind, ]
# daily input dataset
write.csv(TXcountyDat, file.path(getwd(), 'TXcounty_nytimes.csv'))
tail(TXcountyDat)
# read TX county population
#numCnt = 10
popTXcounty= read.csv(file.path(basicDatasetsDir, 'worldpopulationReviewdotcom_2020_TexasCounty.csv'))
# county sorting
ind = (TXcountyDat$date == curDate)
txcntToday = TXcountyDat[ind, ]
txcntToday_morethan200 = txcntToday[txcntToday$cases > totCases_thrshld_toSelectCnt, ]
curCases = txcntToday_morethan200$cases
scases = sort(curCases, index.return = T, decreasing = T)
txcntToday_sorted = txcntToday_morethan200[scases$ix, ]
numCnt = nrow(txcntToday_sorted)
print(paste0('number of Counties: ', numCnt))
print(txcntToday_sorted)
sortedCounties = as.character(txcntToday_sorted$county)
print(sortedCounties)
# run counties
myCaptnLst_county = list()
for (i in 1:numCnt){
tmp = cvd_county_matchedProjected(curDate, sortedCounties[i], jhudat, TXcountyDat,
populationData, popTXcounty)
myCaptnLst_county[[i]] = tmp
print(tmp)
}
countryNamePop$Region
namesTop20
repname1 = 'DAILY_REPORT_COUNTRY.md'
# assume input datasets are already loaded to workspace
print(getwd())
countryNamePop
head(countryNamePop$Region)
head(countryNamePop)
countryNamePop
numCntr
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
cat('\n', '<p>&nbsp;</p>', '\n', '<p>&nbsp;</p>', '\n')
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
cat('\n\n', '<p>&nbsp;</p>', '\n\n', '<p>&nbsp;</p>', '\n\n')
cat('\n', '<p>&nbsp;</p>', '\n\n', '<p>&nbsp;</p>', '\n\n')
cat('hello')
cat('hello'); cat('world')
cat('## Daily Report of Confirmed Cases\n')
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
cat('\n', '<p>&nbsp;</p>', '\n\n', '<p>&nbsp;</p>', '\n\n')
cat('## Daily Report of Confirmed Cases\n')
cat('# Countries (top 25)\n')
cat('\n', '<p>&nbsp;</p>', '\n\n')
aa='aaaaaa'
cat('3fda ', aa)
getImg = paste0('>![img](/output/countries_uptodate/',
countryNamePop$Region[i]), '_3plot_combined.png)')
getImg = paste0('>![img](/output/countries_uptodate/', countryNamePop$Region[i]), '_3plot_combined.png)')
getImg = paste0('>![img](/output/countries_uptodate', countryNamePop$Region[i]), '_3plot_combined.png)')
getImg = paste0('>![img](/output/countries_uptodate')
cat(getImg)
aa
getImg = paste0('>![img](/output/countries_uptodate', aa)
getImg = paste0('>![img](/output/countries_uptodate/', aa)
getImg = paste0('>![img](/output/countries_uptodate/',
countryNamePop$Region[i], '_3plot_combined.png)')
getImg = paste0('>![img](/output/countries_uptodate/',
countryNamePop$Region[i], '_3plot_combined.png)')
getImg
cat(getImg)
i
i=1
getImg = paste0('>![img](/output/countries_uptodate/',
countryNamePop$Region[i], '_3plot_combined.png)')
getImg = paste0('>![img](/output/countries_uptodate/',
countryNamePop$Region[i], '_3plot_combined.png)')
cat(getImg)
cat('\n', '<p>&nbsp;</p>', '\n\n')
repname1 = 'DAILY_REPORT_COUNTRY.md'
sink(file.path(getwd(), repname1))
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
cat('\n', '<p>&nbsp;</p>', '\n\n', '<p>&nbsp;</p>', '\n\n')
cat('## Daily Report of Confirmed Cases\n')
cat('# Countries (top 25)\n')
cat('\n', '<p>&nbsp;</p>', '\n\n')
for (i in 1:numCntr){
getImg = paste0('>![img](/output/countries_uptodate/',
countryNamePop$Region[i], '_3plot_combined.png)')
cat(getImg)
cat('\n', '<p>&nbsp;</p>', '\n\n')
}
sink()
getwd()
sink()
file.path(getwd(), repname1)
sink(file.path(getwd(), repname1))
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
sink()
file.show(file.path(getwd(), repname1))
ls
dir()
getwd()
file.show(file.path(getwd(), repname1))
sink(file.path(getwd(), repname1))
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
cat('\n', '<p>&nbsp;</p>', '\n\n', '<p>&nbsp;</p>', '\n\n')
cat('## Daily Report of Confirmed Cases\n')
cat('# Countries (top 25)\n')
cat('\n', '<p>&nbsp;</p>', '\n\n')
for (i in 1:numCntr){
getImg = paste0('>![img](/output/countries_uptodate/',
countryNamePop$Region[i], '_3plot_combined.png)')
cat(getImg)
cat('\n', '<p>&nbsp;</p>', '\n\n')
}
sink()
i
numCntr
sink(file.path(getwd(), repname1))
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
cat('\n\n', '<p>&nbsp;</p>', '\n\n', '<p>&nbsp;</p>', '\n\n')
cat('## Daily Report of Confirmed Cases\n')
cat('# Countries (top 25)\n')
cat('\n\n', '<p>&nbsp;</p>', '\n\n')
for (i in 1:numCntr){
getImg = paste0('>![img](/output/countries_uptodate/',
countryNamePop$Region[i], '_3plot_combined.png)')
cat(getImg)
cat('\n\n', '<p>&nbsp;</p>', '\n\n')
}
sink()
sortedStates
head(sortedStates)
numState
nrow(countryNamePop)
nrow(sortedStates)
length(sortedStates)
print(sortedCounties)
head(sortedCounties)
source('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow/reporter.R')
numCnt
source('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow/reporter.R')
numState
(file.exists(file.path(getwd(), 'output/states_uptodate/', sortedStates[i], '_3plot_combined.png)')))
i
(file.exists(file.path(getwd(), 'output/states_uptodate/', sortedStates[i], '_3plot_combined.png)')))
file.path(getwd(), 'output/states_uptodate/', sortedStates[i], '_3plot_combined.png)')
sortedStates[i]
sortedStates
i=1
paste0(sortedStates[i], '_3plot_combined.png)')
paste0(sortedStates[i], '_3plot_combined.png')
source('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow/reporter.R')
source('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow/reporter.R')
head(sortedCounties)
sortedCounties
sortedStates
i=1
fnametmp = paste0(sortedStates[i], '_3plot_combined.png')
(file.exists(file.path(getwd(), fnametmp) ))
(file.exists(file.path(getwd(), 'output', 'states_uptodate', fnametmp)))
getImg = paste0('>![img](/output/states_uptodate/',
sortedStates[i], '_3plot_combined.png)')
paste0('>![img](/output/states_uptodate/', fnametmp)
source('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow/reporter.R')
paste0('>![img](/output/states_uptodate/', fnametmp)
getImg = paste0('>![img](/output/states_uptodate/', fnametmp, ')')
getImg
getImg = paste0('>![img](/output/states_uptodate/', fnametmp, ')')
cat(getImg)
curDate
cat('## ', curDate, 'Daily Report of Confirmed Cases\n')
sink(file.path(getwd(), repname2))
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
cat('\n\n', '<p>&nbsp;</p>', '\n\n', '<p>&nbsp;</p>', '\n\n')
cat('## ', curDate, 'Daily Report of Confirmed Cases\n')
cat('# States in the U.S.\n')
cat('\n\n', '<p>&nbsp;</p>', '\n\n')
for (i in 1:length(sortedStates)){
fnametmp = paste0(sortedStates[i], '_3plot_combined.png')
if (file.exists(file.path(getwd(), 'output', 'states_uptodate', fnametmp))) {
getImg = paste0('>![img](/output/states_uptodate/', fnametmp, ')')
cat(getImg)
cat('\n\n', '<p>&nbsp;</p>', '\n\n')
}
}
sink()
cat('## ', curDate, COVID-19 Time Series \n')
cat('# Countries (top 25)\n')
cat('## ', curDate, 'COVID-19 Time Series', '\n')
source('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow/reporter.R')
countryNamePop
# manual curation
countryNamePop1 = countryNamePop
countryNamePop1$Region[which(countryNamePop$Region == 'Korea, South')] = 'Korea,-South'
levels(countryNamePop1$Region)
levels(countryNamePop1$Region)[levels(countryNamePop1$Region)
== 'Korea, South')] <- 'Korea,-South'
levels(countryNamePop1$Region)[levels(countryNamePop1$Region)
== 'Korea, South'] <- 'Korea,-South'
countryNamePop1
# manual curation
cname = countryNamePop$Region
cname
levels(cname)[levels(cname) == 'Korea, South'] <- 'Korea,-South'
cname
cname
cnamePop = cbind(cname, countryNamePop[,2:3])
cnamePop
class(cname)
class(countryNamePop$pop2019)
class(countryNamePop$namesTop20_1)
levels(cname)[levels(cname) == 'United Kingdom'] <- 'United-Kingdom'
cnamePop = cbind(cname, countryNamePop[,2:3])
cnamePop
outPath3 = file.path(getwd(), 'output', 'countries_uptodate')
outPath3
(file.exists(file.path(outPath3, 'Korea, South_3plot_combined.png')))
# manual curation
cname = countryNamePop$Region
levels(cname)[levels(cname) == 'Korea, South'] <- 'Korea,-South'
levels(cname)[levels(cname) == 'United Kingdom'] <- 'United-Kingdom'
cnamePop = cbind(cname, countryNamePop[,2:3])
outPath3 = file.path(getwd(), 'output', 'countries_uptodate')
if (file.exists(file.path(outPath3, 'Korea, South_3plot_combined.png'))) {
file.copy(file.path(outPath3, 'Korea, South_3plot_combined.png'),
file.path(outPath3, 'Korea,-South_3plot_combined.png'))
}
if (file.exists(file.path(outPath3, 'United Kingdom_3plot_combined.png'))) {
file.copy(file.path(outPath3, 'United Kingdomh_3plot_combined.png'),
file.path(outPath3, 'United-Kingdom_3plot_combined.png'))
}
file.copy(file.path(outPath3, 'United Kingdom_3plot_combined.png'),
file.path(outPath3, 'United-Kingdom_3plot_combined.png'))
if (file.exists(file.path(outPath3, 'United Kingdom_3plot_combined.png'))) {
file.copy(file.path(outPath3, 'United Kingdom_3plot_combined.png'),
file.path(outPath3, 'United-Kingdom_3plot_combined.png'))
}
(file.exists(file.path(outPath3, 'United Kingdom_3plot_combined.png')))
if (file.exists(file.path(outPath3, 'United Kingdom_3plot_combined.png'))) {
file.copy(file.path(outPath3, 'United Kingdom_3plot_combined.png'),
file.path(outPath3, 'United-Kingdom_3plot_combined.png'))
}
cname
i=6
repname1 = 'DAILY_REPORT_COUNTRY.md'
sink(file.path(getwd(), repname1))
cat('<img align="right"  height="100" src="/doc/utsw-master-logo-cmyk+BI.png">')
cat('\n\n', '<p>&nbsp;</p>', '\n\n', '<p>&nbsp;</p>', '\n\n')
cat(paste0('## ', curDate, ', COVID-19 Time Series', '\n'))
cat('# Countries (top 25)\n')
cat('\n\n', '<p>&nbsp;</p>', '\n\n')
for (i in 1:nrow(countryNamePop)){
getImg = paste0('>![img](/output/countries_uptodate/',
cname[i], '_3plot_combined.png)')
cat(getImg)
cat('\n\n', '<p>&nbsp;</p>', '\n\n')
}
sink()
sortedCounties
levels(Ctname)[levels(Ctname) == 'Fort Bent'] <- 'Fort-Bent'
levels(Ctname)[levels(Ctname) == 'El Paso'] <- 'El-Paso'
# manual curation
Ctname = sortedCounties
levels(Ctname)[levels(Ctname) == 'Fort Bent'] <- 'Fort-Bent'
levels(Ctname)[levels(Ctname) == 'El Paso'] <- 'El-Paso'
sortedCounties
Ctname
levels(Ctname) == 'Fort Bent'
# manual curation
Ctname = sortedCounties
levels(Ctname)[levels(Ctname) == "Fort Bent"] <- 'Fort-Bent'
Ctname
levels(Ctname)
# manual curation
Ctname = sortedCounties
levels(Ctname)
sortedCounties
class(sortedCounties)
# manual curation
Ctname = sortedCounties
Ctname[which(Ctname == "Fort Bent")] <- 'Fort-Bent'
Ctname[which(Ctname == "El Paso")] <- 'El-Paso'
Ctname
which(Ctname == "Fort Bent")
Ctname
Ctname[which(Ctname == "Fort Bend")] <- 'Fort-Bend'
Ctname[which(Ctname == "El Paso")] <- 'El-Paso'
Ctname
# manual curation
Ctname = sortedCounties
Ctname[which(Ctname == "Fort Bend")] <- 'Fort-Bend'
Ctname[which(Ctname == "El Paso")] <- 'El-Paso'
outPath4 = file.path(getwd(), 'output', 'counties_uptodate')
if (file.exists(file.path(outPath4, 'Fort Bend_3plot_combined.png'))) {
file.copy(file.path(outPath4, 'Fort Bendh_3plot_combined.png'),
file.path(outPath4, 'Fort-Bend_3plot_combined.png'))
}
if (file.exists(file.path(outPath4, 'El Paso_3plot_combined.png'))) {
file.copy(file.path(outPath4, 'El Paso_3plot_combined.png'),
file.path(outPath4, 'El-Paso_3plot_combined.png'))
}
(file.exists(file.path(outPath4, 'El Paso_3plot_combined.png')))
outPath4 = file.path(getwd(), 'output', 'TX_counties_uptodate')
if (file.exists(file.path(outPath4, 'Fort Bend_3plot_combined.png'))) {
file.copy(file.path(outPath4, 'Fort Bendh_3plot_combined.png'),
file.path(outPath4, 'Fort-Bend_3plot_combined.png'))
}
if (file.exists(file.path(outPath4, 'El Paso_3plot_combined.png'))) {
file.copy(file.path(outPath4, 'El Paso_3plot_combined.png'),
file.path(outPath4, 'El-Paso_3plot_combined.png'))
}
outPath4 = file.path(getwd(), 'output', 'TX_counties_uptodate')
if (file.exists(file.path(outPath4, 'Fort Bend_3plot_combined.png'))) {
file.copy(file.path(outPath4, 'Fort Bend_3plot_combined.png'),
file.path(outPath4, 'Fort-Bend_3plot_combined.png'))
}
if (file.exists(file.path(outPath4, 'El Paso_3plot_combined.png'))) {
file.copy(file.path(outPath4, 'El Paso_3plot_combined.png'),
file.path(outPath4, 'El-Paso_3plot_combined.png'))
}
source('C:/githubClone/COVID-19_LookAtUsToday_SeeYourselfTomorrow/reporter.R')
